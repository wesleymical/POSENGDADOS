-- Verificar se a tabela STAGING existe
IF OBJECT_ID('dbo.STAGING_VOTACAO', 'U') IS NOT NULL
BEGIN
    DROP TABLE dbo.STAGING_VOTACAO;
END

-- Criar a tabela STAGING com as colunas do cabeçalho fornecido
CREATE TABLE STAGING_VOTACAO (
    DT_GERACAO VARCHAR(255),
    HH_GERACAO VARCHAR(255),
    ANO_ELEICAO VARCHAR(255),
    CD_TIPO_ELEICAO VARCHAR(255),
    NM_TIPO_ELEICAO VARCHAR(255),
    NR_TURNO VARCHAR(255),
    CD_ELEICAO VARCHAR(255),
    DS_ELEICAO VARCHAR(255),
    DT_ELEICAO VARCHAR(255),
    TP_ABRANGENCIA VARCHAR(255),
    SG_UF VARCHAR(255),
    SG_UE VARCHAR(255),
    NM_UE VARCHAR(255),
    CD_MUNICIPIO VARCHAR(255),
    NM_MUNICIPIO VARCHAR(255),
    NR_ZONA VARCHAR(255),
    CD_CARGO VARCHAR(255),
    DS_CARGO VARCHAR(255),
    SQ_CANDIDATO VARCHAR(255),
    NR_CANDIDATO VARCHAR(255),
    NM_CANDIDATO VARCHAR(255),
    NM_URNA_CANDIDATO VARCHAR(255),
    NM_SOCIAL_CANDIDATO VARCHAR(255),
    CD_SITUACAO_CANDIDATURA VARCHAR(255),
    DS_SITUACAO_CANDIDATURA VARCHAR(255),
    CD_DETALHE_SITUACAO_CAND VARCHAR(255),
    DS_DETALHE_SITUACAO_CAND VARCHAR(255),
    CD_SITUACAO_JULGAMENTO VARCHAR(255),
    DS_SITUACAO_JULGAMENTO VARCHAR(255),
    CD_SITUACAO_CASSACAO VARCHAR(255),
    DS_SITUACAO_CASSACAO VARCHAR(255),
    CD_SITUACAO_DIPLOMA VARCHAR(255),
    DS_SITUACAO_DIPLOMA VARCHAR(255),
    TP_AGREMIACAO VARCHAR(255),
    NR_PARTIDO VARCHAR(255),
    SG_PARTIDO VARCHAR(255),
    NM_PARTIDO VARCHAR(255),
    NR_FEDERACAO VARCHAR(255),
    NM_FEDERACAO VARCHAR(255),
    SG_FEDERACAO VARCHAR(255),
    DS_COMPOSICAO_FEDERACAO VARCHAR(255),
    SQ_COLIGACAO VARCHAR(255),
    NM_COLIGACAO VARCHAR(255),
    DS_COMPOSICAO_COLIGACAO VARCHAR(255),
    ST_VOTO_EM_TRANSITO VARCHAR(255),
    QT_VOTOS_NOMINAIS VARCHAR(255),
    NM_TIPO_DESTINACAO_VOTOS VARCHAR(255),
    QT_VOTOS_NOMINAIS_VALIDOS VARCHAR(255),
    CD_SIT_TOT_TURNO VARCHAR(255),
    DS_SIT_TOT_TURNO VARCHAR(255)
);

-- Definir variável para o caminho do arquivo CSV
DECLARE @FilePath NVARCHAR(255);
SET @FilePath = N'D:\mical\Documents\POS ENGENHARIA DE DADOS\POSENGDADOS\REPOSITORIO\SQL_ENGINES\votacao_candidato_munzona_2024\votacao_candidato_munzona_2024_AC.csv';

-- Comando dinâmico para importar dados do CSV para a tabela de staging
DECLARE @SQL NVARCHAR(MAX);
SET @SQL = N'
BULK INSERT STAGING_VOTACAO
FROM ''' + @FilePath + '''
WITH (
    FIELDTERMINATOR = '';'',
    ROWTERMINATOR = ''\n'',
    FIRSTROW = 2,
    CODEPAGE = ''1252'' -- Utilizar a página de código 1252 para Latin-1
);
';

-- Executar o comando dinâmico
EXEC sp_executesql @SQL;

-- Remover aspas das colunas de texto na tabela de staging
UPDATE STAGING_VOTACAO
SET 
    DT_GERACAO = REPLACE(DT_GERACAO, '"', ''),
    HH_GERACAO = REPLACE(HH_GERACAO, '"', ''),
    ANO_ELEICAO = REPLACE(ANO_ELEICAO, '"', ''),
    CD_TIPO_ELEICAO = REPLACE(CD_TIPO_ELEICAO, '"', ''),
    NM_TIPO_ELEICAO = REPLACE(NM_TIPO_ELEICAO, '"', ''),
    NR_TURNO = REPLACE(NR_TURNO, '"', ''),
    CD_ELEICAO = REPLACE(CD_ELEICAO, '"', ''),
    DS_ELEICAO = REPLACE(DS_ELEICAO, '"', ''),
    DT_ELEICAO = REPLACE(DT_ELEICAO, '"', ''),
    TP_ABRANGENCIA = REPLACE(TP_ABRANGENCIA, '"', ''),
    SG_UF = REPLACE(SG_UF, '"', ''),
    SG_UE = REPLACE(SG_UE, '"', ''),
    NM_UE = REPLACE(NM_UE, '"', ''),
    CD_MUNICIPIO = REPLACE(CD_MUNICIPIO, '"', ''),
    NM_MUNICIPIO = REPLACE(NM_MUNICIPIO, '"', ''),
    NR_ZONA = REPLACE(NR_ZONA, '"', ''),
    CD_CARGO = REPLACE(CD_CARGO, '"', ''),
    DS_CARGO = REPLACE(DS_CARGO, '"', ''),
    SQ_CANDIDATO = REPLACE(SQ_CANDIDATO, '"', ''),
    NR_CANDIDATO = REPLACE(NR_CANDIDATO, '"', ''),
    NM_CANDIDATO = REPLACE(NM_CANDIDATO, '"', ''),
    NM_URNA_CANDIDATO = REPLACE(NM_URNA_CANDIDATO, '"', ''),
    NM_SOCIAL_CANDIDATO = REPLACE(NM_SOCIAL_CANDIDATO, '"', ''),
    CD_SITUACAO_CANDIDATURA = REPLACE(CD_SITUACAO_CANDIDATURA, '"', ''),
    DS_SITUACAO_CANDIDATURA = REPLACE(DS_SITUACAO_CANDIDATURA, '"', ''),
    CD_DETALHE_SITUACAO_CAND = REPLACE(CD_DETALHE_SITUACAO_CAND, '"', ''),
    DS_DETALHE_SITUACAO_CAND = REPLACE(DS_DETALHE_SITUACAO_CAND, '"', ''),
    CD_SITUACAO_JULGAMENTO = REPLACE(CD_SITUACAO_JULGAMENTO, '"', ''),
    DS_SITUACAO_JULGAMENTO = REPLACE(DS_SITUACAO_JULGAMENTO, '"', ''),
    CD_SITUACAO_CASSACAO = REPLACE(CD_SITUACAO_CASSACAO, '"', ''),
    DS_SITUACAO_CASSACAO = REPLACE(DS_SITUACAO_CASSACAO, '"', ''),
    CD_SITUACAO_DIPLOMA = REPLACE(CD_SITUACAO_DIPLOMA, '"', ''),
    DS_SITUACAO_DIPLOMA = REPLACE(DS_SITUACAO_DIPLOMA, '"', ''),
    TP_AGREMIACAO = REPLACE(TP_AGREMIACAO, '"', ''),
    NR_PARTIDO = REPLACE(NR_PARTIDO, '"', ''),
    SG_PARTIDO = REPLACE(SG_PARTIDO, '"', ''),
    NM_PARTIDO = REPLACE(NM_PARTIDO, '"', ''),
    NR_FEDERACAO = REPLACE(NR_FEDERACAO, '"', ''),
    NM_FEDERACAO = REPLACE(NM_FEDERACAO, '"', ''),
    SG_FEDERACAO = REPLACE(SG_FEDERACAO, '"', ''),
    DS_COMPOSICAO_FEDERACAO = REPLACE(DS_COMPOSICAO_FEDERACAO, '"', ''),
    SQ_COLIGACAO = REPLACE(SQ_COLIGACAO, '"', ''),
    NM_COLIGACAO = REPLACE(NM_COLIGACAO, '"', ''),
    DS_COMPOSICAO_COLIGACAO = REPLACE(DS_COMPOSICAO_COLIGACAO, '"', ''),
    ST_VOTO_EM_TRANSITO = REPLACE(ST_VOTO_EM_TRANSITO, '"', ''),
    QT_VOTOS_NOMINAIS = REPLACE(QT_VOTOS_NOMINAIS, '"', ''),
    NM_TIPO_DESTINACAO_VOTOS = REPLACE(NM_TIPO_DESTINACAO_VOTOS, '"', ''),
    QT_VOTOS_NOMINAIS_VALIDOS = REPLACE(QT_VOTOS_NOMINAIS_VALIDOS, '"', ''),
    CD_SIT_TOT_TURNO = REPLACE(CD_SIT_TOT_TURNO, '"', ''),
    DS_SIT_TOT_TURNO = REPLACE(DS_SIT_TOT_TURNO, '"', '');

    -- Inserir dados tratados na tabela AJUSTADO
INSERT INTO AJUSTADO (
    DT_GERACAO,
    HH_GERACAO,
    ANO_ELEICAO,
    CD_TIPO_ELEICAO,
    NM_TIPO_ELEICAO,
    NR_TURNO,
    CD_ELEICAO,
    DS_ELEICAO,
    DT_ELEICAO,
    TP_ABRANGENCIA,
    SG_UF,
    SG_UE,
    NM_UE,
    CD_MUNICIPIO,
    NM_MUNICIPIO,
    NR_ZONA,
    CD_CARGO,
    DS_CARGO,
    SQ_CANDIDATO,
    NR_CANDIDATO,
    NM_CANDIDATO,
    NM_URNA_CANDIDATO,
    NM_SOCIAL_CANDIDATO,
    CD_SITUACAO_CANDIDATURA,
    DS_SITUACAO_CANDIDATURA,
    CD_DETALHE_SITUACAO_CAND,
    DS_DETALHE_SITUACAO_CAND,
    CD_SITUACAO_JULGAMENTO,
    DS_SITUACAO_JULGAMENTO,
    CD_SITUACAO_CASSACAO,
    DS_SITUACAO_CASSACAO,
    CD_SITUACAO_DIPLOMA,
    DS_SITUACAO_DIPLOMA,
    TP_AGREMIACAO,
    NR_PARTIDO,
    SG_PARTIDO,
    NM_PARTIDO,
    NR_FEDERACAO,
    NM_FEDERACAO,
    SG_FEDERACAO,
    DS_COMPOSICAO_FEDERACAO,
    SQ_COLIGACAO,
    NM_COLIGACAO,
    DS_COMPOSICAO_COLIGACAO,
    ST_VOTO_EM_TRANSITO,
    QT_VOTOS_NOMINAIS,
    NM_TIPO_DESTINACAO_VOTOS,
    QT_VOTOS_NOMINAIS_VALIDOS,
    CD_SIT_TOT_TURNO,
    DS_SIT_TOT_TURNO
)
SELECT
    TRY_CONVERT(DATE, TRIM(DT_GERACAO), 103),
    TRY_CONVERT(TIME, TRIM(HH_GERACAO), 108),
    TRY_CONVERT(INT, TRIM(ANO_ELEICAO)),
    TRY_CONVERT(INT, TRIM(CD_TIPO_ELEICAO)),
    TRIM(NM_TIPO_ELEICAO),
    TRY_CONVERT(INT, TRIM(NR_TURNO)),
    TRY_CONVERT(INT, TRIM(CD_ELEICAO)),
    TRIM(DS_ELEICAO),
    TRY_CONVERT(DATE, TRIM(DT_ELEICAO), 103),
    TRIM(TP_ABRANGENCIA),
    TRIM(SG_UF),
    TRIM(SG_UE),
    TRIM(NM_UE),
    TRY_CONVERT(INT, TRIM(CD_MUNICIPIO)),
    TRIM(NM_MUNICIPIO),
    TRY_CONVERT(INT, TRIM(NR_ZONA)),
    TRY_CONVERT(INT, TRIM(CD_CARGO)),
    TRIM(DS_CARGO),
    TRY_CONVERT(BIGINT, TRIM(SQ_CANDIDATO)),
    TRY_CONVERT(INT, TRIM(NR_CANDIDATO)),
    TRIM(NM_CANDIDATO),
    TRIM(NM_URNA_CANDIDATO),
    TRIM(NM_SOCIAL_CANDIDATO),
    TRY_CONVERT(INT, TRIM(CD_SITUACAO_CANDIDATURA)),
    TRIM(DS_SITUACAO_CANDIDATURA),
    TRY_CONVERT(INT, TRIM(CD_DETALHE_SITUACAO_CAND)),
    TRIM(DS_DETALHE_SITUACAO_CAND),
    TRY_CONVERT(INT, TRIM(CD_SITUACAO_JULGAMENTO)),
    TRIM(DS_SITUACAO_JULGAMENTO),
    TRY_CONVERT(INT, TRIM(CD_SITUACAO_CASSACAO)),
    TRIM(DS_SITUACAO_CASSACAO),
    TRY_CONVERT(INT, TRIM(CD_SITUACAO_DIPLOMA)),
    TRIM(DS_SITUACAO_DIPLOMA),
    TRIM(TP_AGREMIACAO),
    TRY_CONVERT(INT, TRIM(NR_PARTIDO)),
    TRIM(SG_PARTIDO),
    TRIM(NM_PARTIDO),
    TRY_CONVERT(INT, TRIM(NR_FEDERACAO)),
    TRIM(NM_FEDERACAO),
    TRIM(SG_FEDERACAO),
    TRIM(DS_COMPOSICAO_FEDERACAO),
    TRY_CONVERT(BIGINT, TRIM(SQ_COLIGACAO)),
    TRIM(NM_COLIGACAO),
    TRIM(DS_COMPOSICAO_COLIGACAO),
    TRIM(ST_VOTO_EM_TRANSITO),
    TRY_CONVERT(INT, TRIM(QT_VOTOS_NOMINAIS)),
    TRIM(NM_TIPO_DESTINACAO_VOTOS),
    TRY_CONVERT(INT, TRIM(QT_VOTOS_NOMINAIS_VALIDOS)),
    TRY_CONVERT(INT, TRIM(CD_SIT_TOT_TURNO)),
    TRIM(DS_SIT_TOT_TURNO)
FROM STAGING_VOTACAO;

-- Inserir dados na tabela PARTIDO a partir da tabela AJUSTADO
MERGE INTO PARTIDO AS target
USING (
    SELECT DISTINCT
        NR_PARTIDO,
        SG_PARTIDO,
        NM_PARTIDO
    FROM AJUSTADO
) AS source
ON (
    target.NR_PARTIDO = source.NR_PARTIDO
)
WHEN MATCHED THEN
    UPDATE SET
        target.SG_PARTIDO = source.SG_PARTIDO,
        target.NM_PARTIDO = source.NM_PARTIDO
WHEN NOT MATCHED BY TARGET THEN
    INSERT (
        NR_PARTIDO,
        SG_PARTIDO,
        NM_PARTIDO
    )
    VALUES (
        source.NR_PARTIDO,
        source.SG_PARTIDO,
        source.NM_PARTIDO
    );

-- Inserir dados na tabela SITUACAO_TURNO a partir da tabela AJUSTADO
MERGE INTO SITUACAO_TURNO AS target
USING (
    SELECT DISTINCT
        CD_SIT_TOT_TURNO,
        DS_SIT_TOT_TURNO
    FROM AJUSTADO
) AS source
ON (
    target.CD_SIT_TOT_TURNO = source.CD_SIT_TOT_TURNO
)
WHEN MATCHED THEN
    UPDATE SET
        target.DS_SIT_TOT_TURNO = source.DS_SIT_TOT_TURNO
WHEN NOT MATCHED BY TARGET THEN
    INSERT (
        CD_SIT_TOT_TURNO,
        DS_SIT_TOT_TURNO
    )
    VALUES (
        source.CD_SIT_TOT_TURNO,
        source.DS_SIT_TOT_TURNO
    );

-- Inserir dados na tabela VOTACAO a partir da tabela AJUSTADO
MERGE INTO VOTACAO AS target
USING (
    SELECT
        DT_GERACAO,
        HH_GERACAO,
        ANO_ELEICAO,
        CD_TIPO_ELEICAO,
        NM_TIPO_ELEICAO,
        NR_TURNO,
        CD_ELEICAO,
        DS_ELEICAO,
        DT_ELEICAO,
        TP_ABRANGENCIA,
        SG_UF,
        SG_UE,
        NM_UE,
        CD_MUNICIPIO,
        NM_MUNICIPIO,
        NR_ZONA,
        CD_CARGO,
        DS_CARGO,
        SQ_CANDIDATO,
        NR_CANDIDATO,
        NM_CANDIDATO,
        NM_URNA_CANDIDATO,
        NM_SOCIAL_CANDIDATO,
        CD_SITUACAO_CANDIDATURA,
        DS_SITUACAO_CANDIDATURA,
        CD_DETALHE_SITUACAO_CAND,
        DS_DETALHE_SITUACAO_CAND,
        CD_SITUACAO_JULGAMENTO,
        DS_SITUACAO_JULGAMENTO,
        CD_SITUACAO_CASSACAO,
        DS_SITUACAO_CASSACAO,
        CD_SITUACAO_DIPLOMA,
        DS_SITUACAO_DIPLOMA,
        TP_AGREMIACAO,
        NR_PARTIDO,
        SG_PARTIDO,
        NM_PARTIDO,
        NR_FEDERACAO,
        NM_FEDERACAO,
        SG_FEDERACAO,
        DS_COMPOSICAO_FEDERACAO,
        SQ_COLIGACAO,
        NM_COLIGACAO,
        DS_COMPOSICAO_COLIGACAO,
        ST_VOTO_EM_TRANSITO,
        QT_VOTOS_NOMINAIS,
        NM_TIPO_DESTINACAO_VOTOS,
        QT_VOTOS_NOMINAIS_VALIDOS,
        CD_SIT_TOT_TURNO,
        DS_SIT_TOT_TURNO
    FROM AJUSTADO
) AS source
ON (
    target.SQ_CANDIDATO = source.SQ_CANDIDATO AND
    target.CD_ELEICAO = source.CD_ELEICAO
)
WHEN MATCHED THEN
    UPDATE SET
        target.DT_GERACAO = source.DT_GERACAO,
        target.HH_GERACAO = source.HH_GERACAO,
        target.ANO_ELEICAO = source.ANO_ELEICAO,
        target.CD_TIPO_ELEICAO = source.CD_TIPO_ELEICAO,
        target.NM_TIPO_ELEICAO = source.NM_TIPO_ELEICAO,
        target.NR_TURNO = source.NR_TURNO,
        target.DS_ELEICAO = source.DS_ELEICAO,
        target.DT_ELEICAO = source.DT_ELEICAO,
        target.TP_ABRANGENCIA = source.TP_ABRANGENCIA,
        target.SG_UF = source.SG_UF,
        target.SG_UE = source.SG_UE,
        target.NM_UE = source.NM_UE,
        target.CD_MUNICIPIO = source.CD_MUNICIPIO,
        target.NM_MUNICIPIO = source.NM_MUNICIPIO,
        target.NR_ZONA = source.NR_ZONA,
        target.CD_CARGO = source.CD_CARGO,
        target.DS_CARGO = source.DS_CARGO,
        target.NR_CANDIDATO = source.NR_CANDIDATO,
        target.NM_CANDIDATO = source.NM_CANDIDATO,
        target.NM_URNA_CANDIDATO = source.NM_URNA_CANDIDATO,
        target.NM_SOCIAL_CANDIDATO = source.NM_SOCIAL_CANDIDATO,
        target.CD_SITUACAO_CANDIDATURA = source.CD_SITUACAO_CANDIDATURA,
        target.DS_SITUACAO_CANDIDATURA = source.DS_SITUACAO_CANDIDATURA,
        target.CD_DETALHE_SITUACAO_CAND = source.CD_DETALHE_SITUACAO_CAND,
        target.DS_DETALHE_SITUACAO_CAND = source.DS_DETALHE_SITUACAO_CAND,
        target.CD_SITUACAO_JULGAMENTO = source.CD_SITUACAO_JULGAMENTO,
        target.DS_SITUACAO_JULGAMENTO = source.DS_SITUACAO_JULGAMENTO,
        target.CD_SITUACAO_CASSACAO = source.CD_SITUACAO_CASSACAO,
        target.DS_SITUACAO_CASSACAO = source.DS_SITUACAO_CASSACAO,
        target.CD_SITUACAO_DIPLOMA = source.CD_SITUACAO_DIPLOMA,
        target.DS_SITUACAO_DIPLOMA = source.DS_SITUACAO_DIPLOMA,
        target.TP_AGREMIACAO = source.TP_AGREMIACAO,
        target.NR_PARTIDO = source.NR_PARTIDO,
        target.SG_PARTIDO = source.SG_PARTIDO,
        target.NM_PARTIDO = source.NM_PARTIDO,
        target.NR_FEDERACAO = source.NR_FEDERACAO,
        target.NM_FEDERACAO = source.NM_FEDERACAO,
        target.SG_FEDERACAO = source.SG_FEDERACAO,
        target.DS_COMPOSICAO_FEDERACAO = source.DS_COMPOSICAO_FEDERACAO,
        target.SQ_COLIGACAO = source.SQ_COLIGACAO,
        target.NM_COLIGACAO = source.NM_COLIGACAO,
        target.DS_COMPOSICAO_COLIGACAO = source.DS_COMPOSICAO_COLIGACAO,
        target.ST_VOTO_EM_TRANSITO = source.ST_VOTO_EM_TRANSITO,
        target.QT_VOTOS_NOMINAIS = source.QT_VOTOS_NOMINAIS,
        target.NM_TIPO_DESTINACAO_VOTOS = source.NM_TIPO_DESTINACAO_VOTOS,
        target.QT_VOTOS_NOMINAIS_VALIDOS = source.QT_VOTOS_NOMINAIS_VALIDOS,
        target.CD_SIT_TOT_TURNO = source.CD_SIT_TOT_TURNO,
        target.DS_SIT_TOT_TURNO = source.DS_SIT_TOT_TURNO
WHEN NOT MATCHED BY TARGET THEN
    INSERT (
        DT_GERACAO,
        HH_GERACAO,
        ANO_ELEICAO,
        CD_TIPO_ELEICAO,
        NM_TIPO_ELEICAO,
        NR_TURNO,
        CD_ELEICAO,
        DS_ELEICAO,
        DT_ELEICAO,
        TP_ABRANGENCIA,
        SG_UF,
        SG_UE,
        NM_UE,
        CD_MUNICIPIO,
        NM_MUNICIPIO,
        NR_ZONA,
        CD_CARGO,
        DS_CARGO,
        SQ_CANDIDATO,
        NR_CANDIDATO,
        NM_CANDIDATO,
        NM_URNA_CANDIDATO,
        NM_SOCIAL_CANDIDATO,
        CD_SITUACAO_CANDIDATURA,
        DS_SITUACAO_CANDIDATURA,
        CD_DETALHE_SITUACAO_CAND,
        DS_DETALHE_SITUACAO_CAND,
        CD_SITUACAO_JULGAMENTO,
        DS_SITUACAO_JULGAMENTO,
        CD_SITUACAO_CASSACAO,
        DS_SITUACAO_CASSACAO,
        CD_SITUACAO_DIPLOMA,
        DS_SITUACAO_DIPLOMA,
        TP_AGREMIACAO,
        NR_PARTIDO,
        SG_PARTIDO,
        NM_PARTIDO,
        NR_FEDERACAO,
        NM_FEDERACAO,
        SG_FEDERACAO,
        DS_COMPOSICAO_FEDERACAO,
        SQ_COLIGACAO,
        NM_COLIGACAO,
        DS_COMPOSICAO_COLIGACAO,
        ST_VOTO_EM_TRANSITO,
        QT_VOTOS_NOMINAIS,
        NM_TIPO_DESTINACAO_VOTOS,
        QT_VOTOS_NOMINAIS_VALIDOS,
        CD_SIT_TOT_TURNO,
        DS_SIT_TOT_TURNO
    )
    VALUES (
        source.DT_GERACAO,
        source.HH_GERACAO,
        source.ANO_ELEICAO,
        source.CD_TIPO_ELEICAO,
        source.NM_TIPO_ELEICAO,
        source.NR_TURNO,
        source.CD_ELEICAO,
        source.DS_ELEICAO,
        source.DT_ELEICAO,
        source.TP_ABRANGENCIA,
        source.SG_UF,
        source.SG_UE,
        source.NM_UE,
        source.CD_MUNICIPIO,
        source.NM_MUNICIPIO,
        source.NR_ZONA,
        source.CD_CARGO,
        source.DS_CARGO,
        source.SQ_CANDIDATO,
        source.NR_CANDIDATO,
        source.NM_CANDIDATO,
        source.NM_URNA_CANDIDATO,
        source.NM_SOCIAL_CANDIDATO,
        source.CD_SITUACAO_CANDIDATURA,
        source.DS_SITUACAO_CANDIDATURA,
        source.CD_DETALHE_SITUACAO_CAND,
        source.DS_DETALHE_SITUACAO_CAND,
        source.CD_SITUACAO_JULGAMENTO,
        source.DS_SITUACAO_JULGAMENTO,
        source.CD_SITUACAO_CASSACAO,
        source.DS_SITUACAO_CASSACAO,
        source.CD_SITUACAO_DIPLOMA,
        source.DS_SITUACAO_DIPLOMA,
        source.TP_AGREMIACAO,
        source.NR_PARTIDO,
        source.SG_PARTIDO,
        source.NM_PARTIDO,
        source.NR_FEDERACAO,
        source.NM_FEDERACAO,
        source.SG_FEDERACAO,
        source.DS_COMPOSICAO_FEDERACAO,
        source.SQ_COLIGACAO,
        source.NM_COLIGACAO,
        source.DS_COMPOSICAO_COLIGACAO,
        source.ST_VOTO_EM_TRANSITO,
        source.QT_VOTOS_NOMINAIS,
        source.NM_TIPO_DESTINACAO_VOTOS,
        source.QT_VOTOS_NOMINAIS_VALIDOS,
        source.CD_SIT_TOT_TURNO,
        source.DS_SIT_TOT_TURNO
    );