-- Dropar a tabela UF se existir
IF OBJECT_ID('dbo.UF', 'U') IS NOT NULL
    DROP TABLE dbo.UF;

-- Criação da tabela UF
CREATE TABLE UF (
    SG_UF VARCHAR(2),
    NM_UE VARCHAR(255),
    PRIMARY KEY (SG_UF, NM_UE)
);

-- Dropar a tabela CARGO se existir
IF OBJECT_ID('dbo.CARGO', 'U') IS NOT NULL
    DROP TABLE dbo.CARGO;

-- Criação da tabela CARGO
CREATE TABLE CARGO (
    CD_CARGO INT PRIMARY KEY,
    DS_CARGO VARCHAR(50)
);

-- Dropar a tabela SITUACAO_CANDIDATURA se existir
IF OBJECT_ID('dbo.SITUACAO_CANDIDATURA', 'U') IS NOT NULL
    DROP TABLE dbo.SITUACAO_CANDIDATURA;

-- Criação da tabela SITUACAO_CANDIDATURA
CREATE TABLE SITUACAO_CANDIDATURA (
    CD_SITUACAO_CANDIDATURA INT PRIMARY KEY,
    DS_SITUACAO_CANDIDATURA VARCHAR(50)
);

-- Dropar a tabela PARTIDO se existir
IF OBJECT_ID('dbo.PARTIDO', 'U') IS NOT NULL
    DROP TABLE dbo.PARTIDO;

-- Criação da tabela PARTIDO
CREATE TABLE PARTIDO (
    NR_PARTIDO INT PRIMARY KEY,
    SG_PARTIDO VARCHAR(255),
    NM_PARTIDO VARCHAR(50)
);

-- Dropar a tabela GRAU_INSTRUCAO se existir
IF OBJECT_ID('dbo.GRAU_INSTRUCAO', 'U') IS NOT NULL
    DROP TABLE dbo.GRAU_INSTRUCAO;

-- Criação da tabela GGRAU_INSTRUCAO
CREATE TABLE GRAU_INSTRUCAO (
    CD_GRAU_INSTRUCAO INT PRIMARY KEY,
    DS_GRAU_INSTRUCAO VARCHAR(50)
);

-- Dropar a tabela OCUPACAO se existir
IF OBJECT_ID('dbo.OCUPACAO', 'U') IS NOT NULL
    DROP TABLE dbo.OCUPACAO;

-- Criação da tabela OCUPACAO
CREATE TABLE OCUPACAO (
    CD_OCUPACAO INT PRIMARY KEY,
    DS_OCUPACAO VARCHAR(255)
);

-- Dropar a tabela CANDIDATO se existir
IF OBJECT_ID('dbo.CANDIDATO', 'U') IS NOT NULL
    DROP TABLE dbo.CANDIDATO;

-- Criação da tabela CANDIDATO
CREATE TABLE CANDIDATO (
    SQ_CANDIDATO BIGINT PRIMARY KEY,
    NR_CANDIDATO INT,
    NM_CANDIDATO VARCHAR(100),
    NM_URNA_CANDIDATO VARCHAR(50),
    NM_SOCIAL_CANDIDATO VARCHAR(100),
    NR_CPF_CANDIDATO CHAR(11),
    DS_EMAIL VARCHAR(255),
    SG_UF_NASCIMENTO VARCHAR(255),
    DT_NASCIMENTO DATE,
    NR_TITULO_ELEITORAL_CANDIDATO VARCHAR(255),
    CD_GENERO INT,
    CD_GRAU_INSTRUCAO INT,
    CD_ESTADO_CIVIL INT,
    CD_COR_RACA INT,
    CD_OCUPACAO INT,
    CD_SITUACAO_CANDIDATURA INT,
    NR_PARTIDO INT,
    NR_FEDERACAO INT,
    SQ_COLIGACAO BIGINT,
    FOREIGN KEY (CD_GRAU_INSTRUCAO) REFERENCES Grau_Instrucao(CD_GRAU_INSTRUCAO),
    FOREIGN KEY (CD_OCUPACAO) REFERENCES Ocupacao(CD_OCUPACAO),
    FOREIGN KEY (CD_SITUACAO_CANDIDATURA) REFERENCES Situacao_Candidatura(CD_SITUACAO_CANDIDATURA),
    FOREIGN KEY (NR_PARTIDO) REFERENCES Partido(NR_PARTIDO)
);

-- Dropar a tabela ELEICAO se existir
IF OBJECT_ID('dbo.ELEICAO', 'U') IS NOT NULL
    DROP TABLE dbo.ELEICAO;

-- Criação da tabela ELEICAO
CREATE TABLE ELEICAO (
    CD_ELEICAO INT PRIMARY KEY,  
    ANO_ELEICAO INT,  
    DS_ELEICAO VARCHAR(255),  
    DT_ELEICAO DATE,  
    NM_TIPO_ELEICAO VARCHAR(255),  
    NR_TURNO INT,  
    TP_ABRANGENCIA VARCHAR(50),  
    CD_TIPO_ELEICAO INT
);

-- Dropar a tabela AJUSTADO se existir
IF OBJECT_ID('dbo.AJUSTADO', 'U') IS NOT NULL
    DROP TABLE dbo.AJUSTADO;

-- Criar tabela de staging ajustada
CREATE TABLE AJUSTADO (
    DT_GERACAO DATE,
    HH_GERACAO TIME,
    ANO_ELEICAO INT,
    CD_TIPO_ELEICAO INT,
    NM_TIPO_ELEICAO VARCHAR(255),
    NR_TURNO INT,
    CD_ELEICAO INT,
    DS_ELEICAO VARCHAR(255),
    DT_ELEICAO DATE,
    TP_ABRANGENCIA VARCHAR(255),
    SG_UF VARCHAR(255),
    SG_UE VARCHAR(255),
    NM_UE VARCHAR(255),
    CD_CARGO INT,
    DS_CARGO VARCHAR(255),
    SQ_CANDIDATO BIGINT,
    NR_CANDIDATO INT,
    NM_CANDIDATO VARCHAR(255),
    NM_URNA_CANDIDATO VARCHAR(255),
    NM_SOCIAL_CANDIDATO VARCHAR(255),
    NR_CPF_CANDIDATO CHAR(11),
    DS_EMAIL VARCHAR(255),
    CD_SITUACAO_CANDIDATURA INT,
    DS_SITUACAO_CANDIDATURA VARCHAR(255),
    TP_AGREMIACAO VARCHAR(255),
    NR_PARTIDO INT,
    SG_PARTIDO VARCHAR(255),
    NM_PARTIDO VARCHAR(255),
    NR_FEDERACAO INT,
    NM_FEDERACAO VARCHAR(255),
    SG_FEDERACAO VARCHAR(255),
    DS_COMPOSICAO_FEDERACAO VARCHAR(255),
    SQ_COLIGACAO BIGINT,
    NM_COLIGACAO VARCHAR(255),
    DS_COMPOSICAO_COLIGACAO VARCHAR(255),
    SG_UF_NASCIMENTO VARCHAR(255),
    DT_NASCIMENTO DATE,
    NR_TITULO_ELEITORAL_CANDIDATO VARCHAR(255),
    CD_GENERO INT,
    DS_GENERO VARCHAR(255),
    CD_GRAU_INSTRUCAO INT,
    DS_GRAU_INSTRUCAO VARCHAR(255),
    CD_ESTADO_CIVIL INT,
    DS_ESTADO_CIVIL VARCHAR(255),
    CD_COR_RACA INT,
    DS_COR_RACA VARCHAR(255),
    CD_OCUPACAO INT,
    DS_OCUPACAO VARCHAR(255),
    CD_SIT_TOT_TURNO INT,
    DS_SIT_TOT_TURNO VARCHAR(255)
);